var i=Object.defineProperty;var a=(r,t,e)=>t in r?i(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var s=(r,t,e)=>a(r,typeof t!="symbol"?t+"":t,e);class c{constructor(){s(this,"statusElement");s(this,"outputSection");s(this,"errorSection");s(this,"outputElement");s(this,"errorElement");this.statusElement=document.getElementById("status"),this.outputSection=document.getElementById("output-section"),this.errorSection=document.getElementById("error-section"),this.outputElement=document.getElementById("output"),this.errorElement=document.getElementById("error-message"),this.init()}init(){var t,e,o,n;(t=document.getElementById("summarize-page"))==null||t.addEventListener("click",()=>{this.summarizePage()}),(e=document.getElementById("summarize-selection"))==null||e.addEventListener("click",()=>{this.summarizeSelection()}),(o=document.getElementById("copy-btn"))==null||o.addEventListener("click",()=>{this.copyToClipboard()}),(n=document.getElementById("options-btn"))==null||n.addEventListener("click",()=>{chrome.runtime.openOptionsPage()}),this.checkConfiguration()}async checkConfiguration(){const t=await chrome.storage.sync.get(["apiKey","provider"]);t.apiKey?this.updateStatus(`Ready to summarize (${t.provider||"openai"})`):(this.showError("Please configure your API key in the options page."),this.disableButtons())}disableButtons(){document.querySelectorAll(".action-btn").forEach(e=>{e.disabled=!0})}async summarizePage(){this.updateStatus("Extracting page content..."),this.hideOutput(),this.hideError();try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!t.id)throw new Error("No active tab found");const e=await chrome.tabs.sendMessage(t.id,{type:"GET_PAGE_TEXT"});if(!e||!e.text)throw new Error("No readable content found on this page.");this.updateStatus("Generating summary...");const o=await chrome.runtime.sendMessage({type:"RUN_SUMMARY",mode:"page",text:e.text,title:t.title,url:t.url});this.handleResponse(o)}catch(t){this.showError(t instanceof Error?t.message:"Failed to summarize page")}}async summarizeSelection(){this.updateStatus("Getting selection..."),this.hideOutput(),this.hideError();try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!t.id)throw new Error("No active tab found");const e=await chrome.tabs.sendMessage(t.id,{type:"GET_SELECTION"});if(!e||!e.text)throw new Error("No text selected. Please select at least 50 characters.");this.updateStatus("Generating summary...");const o=await chrome.runtime.sendMessage({type:"RUN_SUMMARY",mode:"selection",text:e.text,title:t.title,url:t.url});this.handleResponse(o)}catch(t){this.showError(t instanceof Error?t.message:"Failed to summarize selection")}}handleResponse(t){t.ok&&t.summary?(this.showOutput(t.summary),this.updateStatus("Summary generated successfully")):this.showError(t.error||"Failed to generate summary")}updateStatus(t){this.statusElement.textContent=t}showOutput(t){this.outputElement.innerHTML=this.renderMarkdown(t),this.outputSection.classList.remove("hidden"),this.errorSection.classList.add("hidden")}renderMarkdown(t){return t.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/__(.*?)__/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/_(.*?)_/g,"<em>$1</em>").replace(/`(.*?)`/g,"<code>$1</code>").replace(/\n/g,"<br>").replace(/^[-*]\s+(.*)$/gm,"<li>$1</li>").replace(/(<li>.*<\/li>)/s,"<ul>$1</ul>")}showError(t){this.errorElement.textContent=t,this.errorSection.classList.remove("hidden"),this.outputSection.classList.add("hidden"),this.updateStatus("Error occurred")}hideOutput(){this.outputSection.classList.add("hidden")}hideError(){this.errorSection.classList.add("hidden")}async copyToClipboard(){const t=this.outputElement.textContent;if(t)try{await navigator.clipboard.writeText(t);const e=document.getElementById("copy-btn");e.textContent="âœ… Copied!",setTimeout(()=>{e.textContent="ðŸ“‹ Copy"},2e3)}catch(e){console.error("Failed to copy to clipboard:",e)}}}document.addEventListener("DOMContentLoaded",()=>{new c});
